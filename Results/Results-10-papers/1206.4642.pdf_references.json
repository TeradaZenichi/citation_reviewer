[
    {
        "title": "Replacing suffix trees with enhanced suffix arrays",
        "author": [
            "M.I. Abouelhoda",
            "S. Kurtz",
            "E. Ohlebusch"
        ],
        "venue": "J. Discrete Algorithms,",
        "citeRegEx": "Abouelhoda et al\\.,? \\Q2004\\E",
        "shortCiteRegEx": "Abouelhoda et al\\.",
        "year": 2004,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " , Abouelhoda et al. (2004)). The ESA (Abouelhoda et al., 2004) is a more spaceefficient data structure that allows many of the operations provided by the ST, and therefore, it is often used in many practical applications instead of the ST.",
        "context": null
    },
    {
        "title": "Route kernels for trees",
        "author": [
            "F. Aiolli",
            "Martino",
            "G. Da San",
            "A. Sperduti"
        ],
        "venue": "In ICML,",
        "citeRegEx": "Aiolli et al\\.,? \\Q2009\\E",
        "shortCiteRegEx": "Aiolli et al\\.",
        "year": 2009,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " , 2002), trees (Collins & Duffy, 2001; Kashima & Koyanagi, 2002; Aiolli et al., 2009), and graphs (Kashima et al. More recently, various kernels for ordered trees have been proposed (Moschitti, 2006; Kuboyama et al., 2006; Aiolli et al., 2009; Sun et al., 2011). , 2006; Aiolli et al., 2009; Sun et al., 2011). Among the existing tree kernels, only a few kernels can handle unordered trees (Fig. 1(a)). In their seminal work, Vishwanathan and Smola (2003) proposed an efficient kernel for unordered trees. Note that three kernels were designed by Kashima & Koyanagi (2002), Moschitti (2006) and Aiolli et al. (2009) for ordered trees; hence, we used the order information appearing in the datasets as it is. Note that three kernels were designed by Kashima & Koyanagi (2002), Moschitti (2006) and Aiolli et al. (2009) for ordered trees; hence, we used the order information appearing in the datasets as it is. The results show that the subpath kernel proposed by Kimura et al. (2011) is competitive with the other kernels. Note that three kernels were designed by Kashima & Koyanagi (2002), Moschitti (2006) and Aiolli et al. (2009) for ordered trees; hence, we used the order information appearing in the datasets as it is. The results show that the subpath kernel proposed by Kimura et al. (2011) is competitive with the other kernels. Interestingly, the subpath kernel and the kernel proposed by Vishwanathan and Smola (2003) work complementarily. (2011) is competitive with the three other kernels (Vishwanathan & Smola, 2003; Kashima & Koyanagi, 2002; Moschitti, 2006; Aiolli et al., 2009). Finally, we point out that the algorithms in Section 4 and this section can also be applied to the route kernel (Aiolli et al., 2009) for ordered trees. , 2006), syntactic trees (Daum\u00e9 III & Marcu, 2004), and positional trees (Aiolli et al., 2009). , 2006), syntactic trees (Daum\u00e9 III & Marcu, 2004), and positional trees (Aiolli et al., 2009). However, all these kernels (explicitly or implicitly) exploit edge order information at each node in their definitions or algorithms, and therefore, they cannot be directly applied to unordered trees. For unordered trees, a hardness result for tree kernels using general treestructured features was shown by Kashima (2007). Vishwanathan et al. , 2006), syntactic trees (Daum\u00e9 III & Marcu, 2004), and positional trees (Aiolli et al., 2009). However, all these kernels (explicitly or implicitly) exploit edge order information at each node in their definitions or algorithms, and therefore, they cannot be directly applied to unordered trees. For unordered trees, a hardness result for tree kernels using general treestructured features was shown by Kashima (2007). Vishwanathan et al. (2003) proposed an efficient linear-time kernel based on subtrees. , 2006), syntactic trees (Daum\u00e9 III & Marcu, 2004), and positional trees (Aiolli et al., 2009). However, all these kernels (explicitly or implicitly) exploit edge order information at each node in their definitions or algorithms, and therefore, they cannot be directly applied to unordered trees. For unordered trees, a hardness result for tree kernels using general treestructured features was shown by Kashima (2007). Vishwanathan et al. (2003) proposed an efficient linear-time kernel based on subtrees. While this kernel can be computed efficiently with the ESA for strings, it is pointed out that its predictive performance is usually worse than that of the other tree kernels in the previous work of Aiolli et al. (2009). Kimura et al. , 2006), syntactic trees (Daum\u00e9 III & Marcu, 2004), and positional trees (Aiolli et al., 2009). However, all these kernels (explicitly or implicitly) exploit edge order information at each node in their definitions or algorithms, and therefore, they cannot be directly applied to unordered trees. For unordered trees, a hardness result for tree kernels using general treestructured features was shown by Kashima (2007). Vishwanathan et al. (2003) proposed an efficient linear-time kernel based on subtrees. While this kernel can be computed efficiently with the ESA for strings, it is pointed out that its predictive performance is usually worse than that of the other tree kernels in the previous work of Aiolli et al. (2009). Kimura et al. (2011) proposed another tree kernel for unordered trees using vertical substructures called subpaths.",
        "context": null
    },
    {
        "title": "The level ancestor problem simplified. Theo",
        "author": [
            "M.A. Bender",
            "M. Farach-Colton"
        ],
        "venue": "Compute. Sci.,",
        "citeRegEx": "Bender and Farach.Colton,? \\Q2004\\E",
        "shortCiteRegEx": "Bender and Farach.Colton",
        "year": 2004,
        "abstract": "",
        "full_text": "",
        "sentence": "",
        "context": null
    },
    {
        "title": "Fast algorithms for sorting and searching strings",
        "author": [
            "J.L. Bentley",
            "R. Sedgewick"
        ],
        "venue": "In SODA,",
        "citeRegEx": "Bentley and Sedgewick,? \\Q1997\\E",
        "shortCiteRegEx": "Bentley and Sedgewick",
        "year": 1997,
        "abstract": "",
        "full_text": "",
        "sentence": "",
        "context": null
    },
    {
        "title": "LIBSVM: a library for support vector machines",
        "author": [
            "Chang",
            "C.-C",
            "Lin",
            "C.-J"
        ],
        "venue": null,
        "citeRegEx": "Chang et al\\.,? \\Q2001\\E",
        "shortCiteRegEx": "Chang et al\\.",
        "year": 2001,
        "abstract": "",
        "full_text": "",
        "sentence": " The first tree kernel was proposed by Collins and Duffy (2001) for parse trees, and it was then extended to general ordered trees (Kashima & Koyanagi, 2002).",
        "context": null
    },
    {
        "title": "Convolution kernels for natural language",
        "author": [
            "M. Collins",
            "N. Duffy"
        ],
        "venue": "In NIPS,",
        "citeRegEx": "Collins and Duffy,? \\Q2001\\E",
        "shortCiteRegEx": "Collins and Duffy",
        "year": 2001,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": "",
        "context": null
    },
    {
        "title": "A tree-position kernel for document compression",
        "author": [
            "H. Daum\u00e9 III",
            "D. Marcu"
        ],
        "venue": "In DUC,",
        "citeRegEx": "III and Marcu,? \\Q2004\\E",
        "shortCiteRegEx": "III and Marcu",
        "year": 2004,
        "abstract": "",
        "full_text": "",
        "sentence": "",
        "context": null
    },
    {
        "title": "Structuring labeled trees for optimal succinctness, and beyond",
        "author": [
            "P. Ferragina",
            "F. Luccio",
            "G. Manzini",
            "S. Muthukrishnan"
        ],
        "venue": "In FOCS,",
        "citeRegEx": "Ferragina et al\\.,? \\Q2005\\E",
        "shortCiteRegEx": "Ferragina et al\\.",
        "year": 2005,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " Our algorithm is designed by carefully combining two algorithms, namely, the skew algorithm for ESA construction of strings (K\u00e4rkk\u00e4inen & Sanders, 2003) and the linear-time construction algorithm of an SA for a tree (Ferragina et al., 2005). This can be done in O(|T |) time (Ferragina et al., 2005). This can be done in O(|T |) time (Ferragina et al., 2005). The key to the linear-time construction is in Step 4, which is originated from the algorithm of K\u00e4rkk\u00e4inen and Sanders (2003) for updating the LCP for strings.",
        "context": null
    },
    {
        "title": "On graph kernels: Hardness results and efficient alternatives",
        "author": [
            "T. G\u00e4rtner",
            "P. Flach",
            "S. Wrobel"
        ],
        "venue": "In COLT,",
        "citeRegEx": "G\u00e4rtner et al\\.,? \\Q2003\\E",
        "shortCiteRegEx": "G\u00e4rtner et al\\.",
        "year": 2003,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " , 2009), and graphs (Kashima et al., 2003; G\u00e4rtner et al., 2003). Figure 2 shows the experimental comparison of the predictive accuracy of their kernel with that of four other tree kernels using three datasets, including one XML dataset (Zaki & Aggarwal, 2006) and two glycan datasets (Hashimoto et al., 2003; Doubet & Albersheim, 1992). Note that three kernels were designed by Kashima & Koyanagi (2002), Moschitti (2006) and Aiolli et al. Figure 2 shows the experimental comparison of the predictive accuracy of their kernel with that of four other tree kernels using three datasets, including one XML dataset (Zaki & Aggarwal, 2006) and two glycan datasets (Hashimoto et al., 2003; Doubet & Albersheim, 1992). Note that three kernels were designed by Kashima & Koyanagi (2002), Moschitti (2006) and Aiolli et al. Since Haussler (1999) introduced the framework of the convolution kernel, various kernel functions for trees have been proposed.",
        "context": null
    },
    {
        "title": "Glycan: The database of carbohydrate structures",
        "author": [
            "K. Hashimoto",
            "M. Hamajima",
            "S. Goto",
            "S. Masumoto",
            "M. Kawashima",
            "M. Kanehisa"
        ],
        "venue": "In GIW,",
        "citeRegEx": "Hashimoto et al\\.,? \\Q2003\\E",
        "shortCiteRegEx": "Hashimoto et al\\.",
        "year": 2003,
        "abstract": "",
        "full_text": "",
        "sentence": " Figure 2 shows the experimental comparison of the predictive accuracy of their kernel with that of four other tree kernels using three datasets, including one XML dataset (Zaki & Aggarwal, 2006) and two glycan datasets (Hashimoto et al., 2003; Doubet & Albersheim, 1992). Experiment 1: Fast kernel evaluation We compare the execution times using three real data sets, including one XML data set (Zaki & Aggarwal, 2006) and two glycan data sets (Hashimoto et al., 2003; Doubet & Albersheim, 1992).",
        "context": null
    },
    {
        "title": "Convolution kernels on discrete structures",
        "author": [
            "D. Haussler"
        ],
        "venue": "Technical Report UCSC-CRL-99-10, University of Calfornia in Santa Cruz,",
        "citeRegEx": "Haussler,? \\Q1999\\E",
        "shortCiteRegEx": "Haussler",
        "year": 1999,
        "abstract": "",
        "full_text": "",
        "sentence": " A framework called the convolution kernel (Haussler, 1999) is widely used for designing kernel functions for structured data, where the structured data are (implicitly) decomposed into substructures, and a kernel function is defined as the sum of kernel functions among the substructures.",
        "context": null
    },
    {
        "title": "Simple linear work suffix array construction",
        "author": [
            "J. K\u00e4rkk\u00e4inen",
            "P. Sanders"
        ],
        "venue": "In ICALP,",
        "citeRegEx": "K\u00e4rkk\u00e4inen and Sanders,? \\Q2003\\E",
        "shortCiteRegEx": "K\u00e4rkk\u00e4inen and Sanders",
        "year": 2003,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": "",
        "context": null
    },
    {
        "title": "Linear-time longest-common-prefix computation in suffix arrays and its applications",
        "author": [
            "T. Kasai",
            "G. Lee",
            "H. Arimura",
            "S. Arikawa",
            "K. Park"
        ],
        "venue": "CPM,",
        "citeRegEx": "Kasai et al\\.,? \\Q2001\\E",
        "shortCiteRegEx": "Kasai et al\\.",
        "year": 2001,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " Since we constructed an ESA instead of a ST, we use the ESA to simulate bottom-up traversals in the ST (Kasai et al., 2001).",
        "context": null
    },
    {
        "title": "Machine Learning Approaches for Structureddata",
        "author": [
            "H. Kashima"
        ],
        "venue": "PhD thesis, Kyoto University,",
        "citeRegEx": "Kashima,? \\Q2007\\E",
        "shortCiteRegEx": "Kashima",
        "year": 2007,
        "abstract": "",
        "full_text": "",
        "sentence": " More recently, Kimura et al. (2011) proposed another tree kernel using vertical substructures called subpaths.",
        "context": null
    },
    {
        "title": "Kernels for semi-structured data",
        "author": [
            "H. Kashima",
            "T. Koyanagi"
        ],
        "venue": "In ICML,",
        "citeRegEx": "Kashima and Koyanagi,? \\Q2002\\E",
        "shortCiteRegEx": "Kashima and Koyanagi",
        "year": 2002,
        "abstract": "",
        "full_text": "",
        "sentence": " The subpath kernel proposed by Kimura et al. (2011) is competitive with the three other kernels (Vishwanathan & Smola, 2003; Kashima & Koyanagi, 2002; Moschitti, 2006; Aiolli et al.",
        "context": null
    },
    {
        "title": "Marginalized kernels between labeled graphs",
        "author": [
            "H. Kashima",
            "K. Tsuda",
            "A. Inokuchi"
        ],
        "venue": "In ICML,",
        "citeRegEx": "Kashima et al\\.,? \\Q2003\\E",
        "shortCiteRegEx": "Kashima et al\\.",
        "year": 2003,
        "abstract": "",
        "full_text": "",
        "sentence": " , 2009), and graphs (Kashima et al., 2003; G\u00e4rtner et al., 2003). Proposed methods By improving the result of Kimura et al. (2011), we aim to develop (i) a theoretically guaranteed lineartime kernel computation algorithm that is practically fast, and (ii) an efficient prediction algorithm whose running time depends only on the size of the input tree.",
        "context": null
    },
    {
        "title": "A subpath kernel for rooted unordered trees",
        "author": [
            "D. Kimura",
            "T. Kuboyama",
            "T. Shibuya",
            "H. Kashima"
        ],
        "venue": "In PAKDD,",
        "citeRegEx": "Kimura et al\\.,? \\Q2011\\E",
        "shortCiteRegEx": "Kimura et al\\.",
        "year": 2011,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " Kimura et al. (2011) proposed a kernel function for unordered trees on the basis of their subpaths, which are vertical substructures of trees responsible for hierarchical information in them. Kimura et al. (2011) proposed a kernel function for unordered trees on the basis of their subpaths, which are vertical substructures of trees responsible for hierarchical information in them. Their kernel exhibits practically good performance in terms of accuracy and speed; however, lineartime computation is not guaranteed theoretically, unlike the case of the other unordered tree kernel proposed by Vishwanathan and Smola (2003). In this paper, we propose a theoretically guaranteed linear-time kernel computation algorithm that is also practically fast, and we present an efficient prediction algorithm whose running time depends only on the size of the input tree. (c) Subpath features of Kimura et al. . Kimura et al. (2011) also showed that their subpath kernel is practically fast and that it is competitive with the linear-time kernel (Teo & Vishwanathan, 2006). (c) Subpath features of Kimura et al. . Kimura et al. (2011) also showed that their subpath kernel is practically fast and that it is competitive with the linear-time kernel (Teo & Vishwanathan, 2006). However, despite its practical usefulness, the time complexity of the subpath kernel is theoretically O(nlogn) on average, and it is O(n) in the worst case, where n is the sum of the sizes of the input trees, because their algorithm for computing the kernel uses the multi-key quick sort (Bentley & Sedgewick, 1997). Moreover, in contrast to the lineartime kernel (Vishwanathan & Smola, 2003; Teo & Vishwanathan, 2006), we need to evaluate the subpath kernel between a given tree and all the support vectors in the prediction phase, which is a We used LIBSVM (Chang & Lin, 2001) as the SVM implementation. The accuracy is measured using 10-fold cross-validation. Kernels by Kimura et al. (2011) and Moschitti (2006) have tunable weight parameters, which were also tuned by cross-validation. (c) Subpath features of Kimura et al. . Kimura et al. (2011) also showed that their subpath kernel is practically fast and that it is competitive with the linear-time kernel (Teo & Vishwanathan, 2006). However, despite its practical usefulness, the time complexity of the subpath kernel is theoretically O(nlogn) on average, and it is O(n) in the worst case, where n is the sum of the sizes of the input trees, because their algorithm for computing the kernel uses the multi-key quick sort (Bentley & Sedgewick, 1997). Moreover, in contrast to the lineartime kernel (Vishwanathan & Smola, 2003; Teo & Vishwanathan, 2006), we need to evaluate the subpath kernel between a given tree and all the support vectors in the prediction phase, which is a We used LIBSVM (Chang & Lin, 2001) as the SVM implementation. The accuracy is measured using 10-fold cross-validation. Kernels by Kimura et al. (2011) and Moschitti (2006) have tunable weight parameters, which were also tuned by cross-validation. First, we compare the execution time of the proposed linear-time algorithm (denoted by \u2018Proposed\u2019) with that of the existing algorithm of Kimura et al. (2011) (\u2018Multikey\u2019) for the subpath kernel. In this paper, we focused on the subpath kernel for unordered trees proposed by Kimura et al. (2011), and we proposed a linear-time algorithm for computing it with an enhanced suffix array for trees.",
        "context": null
    },
    {
        "title": "A gram distribution kernel applied to glycan classification and motif extraction",
        "author": [
            "T. Kuboyama",
            "K. Hirata",
            "K.F. Aoki-Kinoshita",
            "H. Kashima",
            "H. Yasuda"
        ],
        "venue": "In GIW,",
        "citeRegEx": "Kuboyama et al\\.,? \\Q2006\\E",
        "shortCiteRegEx": "Kuboyama et al\\.",
        "year": 2006,
        "abstract": "",
        "full_text": "",
        "sentence": " More recently, various kernels for ordered trees have been proposed (Moschitti, 2006; Kuboyama et al., 2006; Aiolli et al., 2009; Sun et al., 2011). The first tree kernel was proposed for parse trees by Collins and Duffy (Collins & Duffy, 2001), and then, it was generalized for labeled ordered trees (Kashima & Koyanagi, 2002; Kuboyama et al., 2006), syntactic trees (Daum\u00e9 III & Marcu, 2004), and positional trees (Aiolli et al.",
        "context": null
    },
    {
        "title": "The spectrum kernel: a string kernel for SVM protein classification",
        "author": [
            "C. Leslie",
            "E. Eskin",
            "W.S. Noble"
        ],
        "venue": "In PSB,",
        "citeRegEx": "Leslie et al\\.,? \\Q2002\\E",
        "shortCiteRegEx": "Leslie et al\\.",
        "year": 2002,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " In the framework of the convolution kernel, various kernel functions have been proposed for sequences (Lodhi et al., 2002; Leslie et al., 2002), trees (Collins & Duffy, 2001; Kashima & Koyanagi, 2002; Aiolli et al.",
        "context": null
    },
    {
        "title": "Text classification using string kernels",
        "author": [
            "H. Lodhi",
            "C. Saunders",
            "J. Shawe-Taylor",
            "N. Cristianini",
            "C. Watkins"
        ],
        "venue": "J. Mach. Learn. Res.,",
        "citeRegEx": "Lodhi et al\\.,? \\Q2002\\E",
        "shortCiteRegEx": "Lodhi et al\\.",
        "year": 2002,
        "abstract": "",
        "full_text": "",
        "sentence": " In the framework of the convolution kernel, various kernel functions have been proposed for sequences (Lodhi et al., 2002; Leslie et al., 2002), trees (Collins & Duffy, 2001; Kashima & Koyanagi, 2002; Aiolli et al.",
        "context": null
    },
    {
        "title": "Efficient convolution kernels for dependency and constituent syntactic trees",
        "author": [
            "A. Moschitti"
        ],
        "venue": "In ECML,",
        "citeRegEx": "Moschitti,? \\Q2006\\E",
        "shortCiteRegEx": "Moschitti",
        "year": 2006,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " More recently, various kernels for ordered trees have been proposed (Moschitti, 2006; Kuboyama et al., 2006; Aiolli et al., 2009; Sun et al., 2011). tion using the enhanced suffix array (ESA) for strings was proposed by Teo and Vishwanathan (2006). More recently, Kimura et al. (2011) is competitive with the three other kernels (Vishwanathan & Smola, 2003; Kashima & Koyanagi, 2002; Moschitti, 2006; Aiolli et al., 2009). Recently, Severyn and Moschitti (2011) proposed a fast training algorithm for structured kernels with a cutting plane method, which might be applied for the subpath kernel.",
        "context": null
    },
    {
        "title": "Learning with Kernels",
        "author": [
            "B. Sch\u00f6lkopf",
            "A.J. Smola"
        ],
        "venue": null,
        "citeRegEx": "Sch\u00f6lkopf and Smola,? \\Q2002\\E",
        "shortCiteRegEx": "Sch\u00f6lkopf and Smola",
        "year": 2002,
        "abstract": "A comprehensive introduction to Support Vector Machines and related kernel methods.\n               In the 1990s, a new type of learning algorithm was developed, based on results from statistical learning theory: the Support Vector Machine (SVM). This gave rise to a new class of theoretically elegant learning machines that use a central concept of SVMs\u2014-kernels\u2014for a number of learning tasks. Kernel machines provide a modular framework that can be adapted to different tasks and domains by the choice of the kernel function and the base algorithm. They are replacing neural networks in a variety of fields, including engineering, information retrieval, and bioinformatics.\n               Learning with Kernels provides an introduction to SVMs and related kernel methods. Although the book begins with the basics, it also includes the latest research. It provides all of the concepts necessary to enable a reader equipped with some basic mathematical knowledge to enter the world of machine learning using theoretically well-founded yet easy-to-use kernel algorithms and to understand and apply the powerful algorithms that have been developed over the last few years.",
        "full_text": "",
        "sentence": "",
        "context": null
    },
    {
        "title": "Fast support vector machines for structural kernels",
        "author": [
            "A. Severyn",
            "A. Moschitti"
        ],
        "venue": "In ECML PKDD,",
        "citeRegEx": "Severyn and Moschitti,? \\Q2011\\E",
        "shortCiteRegEx": "Severyn and Moschitti",
        "year": 2011,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": "",
        "context": null
    },
    {
        "title": "Constructing the suffix tree of a tree with a large alphabet",
        "author": [
            "T. Shibuya"
        ],
        "venue": "IEICE Trans,",
        "citeRegEx": "Shibuya,? \\Q2003\\E",
        "shortCiteRegEx": "Shibuya",
        "year": 2003,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " The suffix tree (ST) of trees (Shibuya, 2003) is a potential candidate.",
        "context": null
    },
    {
        "title": "Tree sequence kernel for natural language",
        "author": [
            "J. Sun",
            "M. Zhang",
            "C.L. Tan"
        ],
        "venue": "In AAAI,",
        "citeRegEx": "Sun et al\\.,? \\Q2011\\E",
        "shortCiteRegEx": "Sun et al\\.",
        "year": 2011,
        "abstract": "\n      \n        We propose Tree Sequence Kernel (TSK), which implicitly exhausts the structure features of a sequence of subtrees embedded in the phrasal parse tree. By incorporating the capability of sequence kernel, TSK enriches tree kernel with tree sequence features so that it may provide additional useful patterns for machine learning applications. Two approaches of penalizing the substructures are proposed and both can be accomplished by efficient algorithms via dynamic programming. Evaluations are performed on two natural language tasks, i.e. Question Classification and Relation Extraction. Experimental results suggest that TSK outperforms tree kernel for both tasks, which also reveals that the structure features made up of multiple subtrees are effective and play a complementary role to the single tree structure.\n      \n    ",
        "full_text": "",
        "sentence": " More recently, various kernels for ordered trees have been proposed (Moschitti, 2006; Kuboyama et al., 2006; Aiolli et al., 2009; Sun et al., 2011).",
        "context": null
    },
    {
        "title": "Fast and space efficient string kernels using suffix arrays",
        "author": [
            "C.H. Teo",
            "S.V.N. Vishwanathan"
        ],
        "venue": "In ICML,",
        "citeRegEx": "Teo and Vishwanathan,? \\Q2006\\E",
        "shortCiteRegEx": "Teo and Vishwanathan",
        "year": 2006,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": " (3) is identical to the one of Teo and Vishwanathan (2006) when {Ti}i and T are strings.",
        "context": null
    },
    {
        "title": "Fast kernels for string and tree matching",
        "author": [
            "S.V.N. Vishwanathan",
            "A. Smola"
        ],
        "venue": "In NIPS,",
        "citeRegEx": "Vishwanathan and Smola,? \\Q2003\\E",
        "shortCiteRegEx": "Vishwanathan and Smola",
        "year": 2003,
        "abstract": "Abstract n\u00e3o dispon\u00edvel",
        "full_text": "",
        "sentence": "",
        "context": null
    },
    {
        "title": "Xrules: An effective structural classifier for xml data",
        "author": [
            "M.J. Zaki",
            "C.C. Aggarwal"
        ],
        "venue": "Mach. Learn.,",
        "citeRegEx": "Zaki and Aggarwal,? \\Q2006\\E",
        "shortCiteRegEx": "Zaki and Aggarwal",
        "year": 2006,
        "abstract": "",
        "full_text": "",
        "sentence": "",
        "context": null
    }
]